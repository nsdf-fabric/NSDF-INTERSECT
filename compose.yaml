# Simple docker-compose file which sets up the broker, dashboard, and dashboard service
# Note that for the broker, the default credentials are ` intersect_username / intersect_password `

services:
  broker:
    image: "bitnami/rabbitmq:3.13.3"
    ports:
      - "1883:1883" # MQTT port
      - "5672:5672" # AMQP port
      - "15672:15672" # Web UI
    environment:
      # full list of env variables available at https://github.com/bitnami/containers/blob/main/bitnami/rabbitmq/README.md
      RABBITMQ_PLUGINS: "rabbitmq_management rabbitmq_mqtt"
      RABBITMQ_USERNAME: "intersect_username"
      RABBITMQ_PASSWORD: "intersect_password"
      RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS: "yes"
      RABBITMQ_DISK_FREE_ABSOLUTE_LIMIT: 6Gi
    healthcheck:
      test: rabbitmq-diagnostics -q ping && rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

  minio:
    image: "bitnami/minio:2024.6.4"
    environment:
      # references: https://github.com/bitnami/containers/blob/main/bitnami/minio/README.md
      MINIO_ROOT_USER: AKIAIOSFODNN7EXAMPLE
      MINIO_ROOT_PASSWORD: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    ports:
      - "9000:9000" # main MINIO API port
      - "9001:9001" # web UI
    #volumes:
    #- "./tmp/minio:/bitnami/minio/data"
  dashboard:
    image: "intersect-dashboard:latest"
    ports:
      - "10042:10042"
    depends_on:
      - broker
    environment:
      BOKEH_ALLOW_WS_ORIGIN: "*"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10042/"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s
    volumes:
      - intersect_bragg_data:/usr/src/dashboard/bragg_data/
      - intersect_transition_data:/usr/src/dashboard/transition_data/
      - intersect_next_temperature_data:/usr/src/dashboard/next_temperature_data/
  dashboard_service:
    image: "intersect-service:latest"
    ports:
      - "10043:10043"
    depends_on:
      broker:
        condition: service_healthy
    volumes:
      - intersect_bragg_data:/usr/src/dashboard_service/bragg_data/
      - intersect_transition_data:/usr/src/dashboard_service/transition_data/
      - intersect_next_temperature_data:/usr/src/dashboard_service/next_temperature_data/
volumes:
  intersect_bragg_data:
  intersect_transition_data:
  intersect_next_temperature_data:
