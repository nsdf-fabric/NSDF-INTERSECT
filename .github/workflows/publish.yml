name: Publish Services to GHCR

on:
  workflow_run:
    workflows: [test]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DASHBOARD_IMAGE_NAME: intersect-dashboard
      DASHBOARD_SERVICE_IMAGE_NAME: intersect-service
      STORAGE_SERVICE_IMAGE_NAME: intersect-storage

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Dashboard Docker image
        run: |
          docker build -f Dockerfile.dashboard -t ghcr.io/${{ github.repository_owner }}/${{env.DASHBOARD_IMAGE_NAME}}:latest .

      - name: Build Dashboard Service Docker image
        run: |
          docker build -f Dockerfile.dashboard_service -t ghcr.io/${{ github.repository_owner }}/${{env.DASHBOARD_SERVICE_IMAGE_NAME}}:latest .

      - name: Build Storage Service Docker image
        run: |
          docker build -f Dockerfile.storage_service -t ghcr.io/${{ github.repository_owner }}/${{env.STORAGE_SERVICE_IMAGE_NAME}}:latest .

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Dashboard Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{env.DASHBOARD_IMAGE_NAME}}:latest

      - name: Push Dashboard Service Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{env.DASHBOARD_SERVICE_IMAGE_NAME}}:latest

      - name: Push Storage Service Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{env.STORAGE_SERVICE_IMAGE_NAME}}:latest
